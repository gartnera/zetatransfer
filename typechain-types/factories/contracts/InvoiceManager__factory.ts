/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  InvoiceManager,
  InvoiceManagerInterface,
} from "../../contracts/InvoiceManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "systemContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "OnlySystemContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceUSD",
        type: "uint256",
      },
    ],
    name: "InvoiceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payer",
        type: "address",
      },
    ],
    name: "InvoicePaid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_priceUSD",
        type: "uint256",
      },
    ],
    name: "createInvoice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_invoiceId",
        type: "uint256",
      },
    ],
    name: "getInvoice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "priceUSD",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paid",
            type: "bool",
          },
        ],
        internalType: "struct InvoiceManager.Invoice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvoices",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "priceUSD",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paid",
            type: "bool",
          },
        ],
        internalType: "struct InvoiceManager.Invoice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "getInvoicesByCreator",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "priceUSD",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paid",
            type: "bool",
          },
        ],
        internalType: "struct InvoiceManager.Invoice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyInvoices",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "priceUSD",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "paid",
            type: "bool",
          },
        ],
        internalType: "struct InvoiceManager.Invoice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "invoices",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "priceUSD",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "paid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "invoicesByCreator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextInvoiceId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "origin",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        internalType: "struct zContext",
        name: "context",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onCrossChainCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "systemContract",
    outputs: [
      {
        internalType: "contract SystemContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017e5380380620017e5833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b6000815190506200008f8162000100565b92915050565b600060208284031215620000ae57620000ad620000fb565b5b6000620000be848285016200007e565b91505092915050565b6000620000d482620000db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200010b81620000c7565b81146200011757600080fd5b50565b6116bb806200012a6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063bb88b76911610066578063bb88b76914610173578063c79272c714610191578063d4280d5a146101af578063d534513b146101cb578063de43156e146101fb5761009e565b80633a23cc0a146100a35780634e6d1405146100d35780636ff2a953146101075780637b735a1c146101255780639b088d3014610155575b600080fd5b6100bd60048036038101906100b89190610ea4565b610217565b6040516100ca91906111e4565b60405180910390f35b6100ed60048036038101906100e89190610ea4565b6103ae565b6040516100fe95949392919061126d565b60405180910390f35b61010f6104a9565b60405161011c9190611206565b60405180910390f35b61013f600480360381019061013a9190610d37565b6104af565b60405161014c9190611167565b60405180910390f35b61015d6106fc565b60405161016a9190611167565b60405180910390f35b61017b610872565b6040516101889190611189565b60405180910390f35b610199610896565b6040516101a69190611167565b60405180910390f35b6101c960048036038101906101c49190610da4565b6108a6565b005b6101e560048036038101906101e09190610d64565b610a76565b6040516101f29190611206565b60405180910390f35b61021560048036038101906102109190610e00565b610aa7565b005b61021f610b3e565b6002548210610263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025a906111c4565b60405180910390fd5b600182815481106102775761027661154d565b5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461030090611443565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90611443565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b50505050508152602001600382015481526020016004820160009054906101000a900460ff1615151515815250509050919050565b600181815481106103be57600080fd5b90600052602060002090600502016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461040d90611443565b80601f016020809104026020016040519081016040528092919081815260200182805461043990611443565b80156104865780601f1061045b57610100808354040283529160200191610486565b820191906000526020600020905b81548152906001019060200180831161046957829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16905085565b60025481565b60606000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905067ffffffffffffffff8111156105145761051361157c565b5b60405190808252806020026020018201604052801561054d57816020015b61053a610b3e565b8152602001906001900390816105325790505b50905060005b82805490508110156106f15760018382815481106105745761057361154d565b5b9060005260206000200154815481106105905761058f61154d565b5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461061990611443565b80601f016020809104026020016040519081016040528092919081815260200182805461064590611443565b80156106925780601f1061066757610100808354040283529160200191610692565b820191906000526020600020905b81548152906001019060200180831161067557829003601f168201915b50505050508152602001600382015481526020016004820160009054906101000a900460ff1615151515815250508282815181106106d3576106d261154d565b5b602002602001018190525080806106e9906114a6565b915050610553565b508092505050919050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561086957838290600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546107b390611443565b80601f01602080910402602001604051908101604052809291908181526020018280546107df90611443565b801561082c5780601f106108015761010080835404028352916020019161082c565b820191906000526020600020905b81548152906001019060200180831161080f57829003601f168201915b50505050508152602001600382015481526020016004820160009054906101000a900460ff16151515158152505081526020019060010190610720565b50505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606108a1336104af565b905090565b60006040518060a0016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200160001515815250905060018190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610985929190610b85565b506060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055505050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060025490806001815401808255809150506001900390600052602060002001600090919091909150557f3dd6d22776ff6d9d4ebff348c9dcbf3666c744d95ee1af30c9b37bee5d6b99c5600254338585604051610a519493929190611221565b60405180910390a160026000815480929190610a6c906114a6565b9190505550505050565b60036020528160005260406000208181548110610a9257600080fd5b90600052602060002001600091509150505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b36576040517f14c6658d000000000000000000000000000000000000000000000000000000008152600401610b2d906111a4565b60405180910390fd5b505050505050565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000151581525090565b828054610b9190611443565b90600052602060002090601f016020900481019282610bb35760008555610bfa565b82601f10610bcc57805160ff1916838001178555610bfa565b82800160010185558215610bfa579182015b82811115610bf9578251825591602001919060010190610bde565b5b509050610c079190610c0b565b5090565b5b80821115610c24576000816000905550600101610c0c565b5090565b6000610c3b610c36846112ec565b6112c7565b905082815260208101848484011115610c5757610c566115bf565b5b610c62848285611401565b509392505050565b600081359050610c7981611657565b92915050565b60008083601f840112610c9557610c946115b0565b5b8235905067ffffffffffffffff811115610cb257610cb16115ab565b5b602083019150836001820283011115610cce57610ccd6115ba565b5b9250929050565b600082601f830112610cea57610ce96115b0565b5b8135610cfa848260208601610c28565b91505092915050565b600060608284031215610d1957610d186115b5565b5b81905092915050565b600081359050610d318161166e565b92915050565b600060208284031215610d4d57610d4c6115c9565b5b6000610d5b84828501610c6a565b91505092915050565b60008060408385031215610d7b57610d7a6115c9565b5b6000610d8985828601610c6a565b9250506020610d9a85828601610d22565b9150509250929050565b60008060408385031215610dbb57610dba6115c9565b5b600083013567ffffffffffffffff811115610dd957610dd86115c4565b5b610de585828601610cd5565b9250506020610df685828601610d22565b9150509250929050565b600080600080600060808688031215610e1c57610e1b6115c9565b5b600086013567ffffffffffffffff811115610e3a57610e396115c4565b5b610e4688828901610d03565b9550506020610e5788828901610c6a565b9450506040610e6888828901610d22565b935050606086013567ffffffffffffffff811115610e8957610e886115c4565b5b610e9588828901610c7f565b92509250509295509295909350565b600060208284031215610eba57610eb96115c9565b5b6000610ec884828501610d22565b91505092915050565b6000610edd838361105d565b905092915050565b610eee81611383565b82525050565b610efd81611383565b82525050565b6000610f0e8261132d565b610f188185611350565b935083602082028501610f2a8561131d565b8060005b85811015610f665784840389528151610f478582610ed1565b9450610f5283611343565b925060208a01995050600181019050610f2e565b50829750879550505050505092915050565b610f8181611395565b82525050565b610f9081611395565b82525050565b610f9f816113cb565b82525050565b6000610fb082611338565b610fba8185611361565b9350610fca818560208601611410565b610fd3816115ce565b840191505092915050565b6000610fe982611338565b610ff38185611372565b9350611003818560208601611410565b61100c816115ce565b840191505092915050565b6000611024602b83611372565b915061102f826115df565b604082019050919050565b6000611047601683611372565b91506110528261162e565b602082019050919050565b600060a0830160008301516110756000860182611149565b5060208301516110886020860182610ee5565b50604083015184820360408601526110a08282610fa5565b91505060608301516110b56060860182611149565b5060808301516110c86080860182610f78565b508091505092915050565b600060a0830160008301516110eb6000860182611149565b5060208301516110fe6020860182610ee5565b50604083015184820360408601526111168282610fa5565b915050606083015161112b6060860182611149565b50608083015161113e6080860182610f78565b508091505092915050565b611152816113c1565b82525050565b611161816113c1565b82525050565b600060208201905081810360008301526111818184610f03565b905092915050565b600060208201905061119e6000830184610f96565b92915050565b600060208201905081810360008301526111bd81611017565b9050919050565b600060208201905081810360008301526111dd8161103a565b9050919050565b600060208201905081810360008301526111fe81846110d3565b905092915050565b600060208201905061121b6000830184611158565b92915050565b60006080820190506112366000830187611158565b6112436020830186610ef4565b81810360408301526112558185610fde565b90506112646060830184611158565b95945050505050565b600060a0820190506112826000830188611158565b61128f6020830187610ef4565b81810360408301526112a18186610fde565b90506112b06060830185611158565b6112bd6080830184610f87565b9695505050505050565b60006112d16112e2565b90506112dd8282611475565b919050565b6000604051905090565b600067ffffffffffffffff8211156113075761130661157c565b5b611310826115ce565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061138e826113a1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113d6826113dd565b9050919050565b60006113e8826113ef565b9050919050565b60006113fa826113a1565b9050919050565b82818337600083830152505050565b60005b8381101561142e578082015181840152602081019050611413565b8381111561143d576000848401525b50505050565b6000600282049050600182168061145b57607f821691505b6020821081141561146f5761146e61151e565b5b50919050565b61147e826115ce565b810181811067ffffffffffffffff8211171561149d5761149c61157c565b5b80604052505050565b60006114b1826113c1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114e4576114e36114ef565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f6e6c792073797374656d20636f6e74726163742063616e2063616c6c20746860008201527f69732066756e6374696f6e000000000000000000000000000000000000000000602082015250565b7f496e766f69636520646f6573206e6f7420657869737400000000000000000000600082015250565b61166081611383565b811461166b57600080fd5b50565b611677816113c1565b811461168257600080fd5b5056fea2646970667358221220318f36b3932ef633da09b2eb2fd9fd5300b53d81f0a4bb4d4e1c8da183e5fff564736f6c63430008070033";

type InvoiceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InvoiceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InvoiceManager__factory extends ContractFactory {
  constructor(...args: InvoiceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    systemContractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InvoiceManager> {
    return super.deploy(
      systemContractAddress,
      overrides || {}
    ) as Promise<InvoiceManager>;
  }
  override getDeployTransaction(
    systemContractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(systemContractAddress, overrides || {});
  }
  override attach(address: string): InvoiceManager {
    return super.attach(address) as InvoiceManager;
  }
  override connect(signer: Signer): InvoiceManager__factory {
    return super.connect(signer) as InvoiceManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvoiceManagerInterface {
    return new utils.Interface(_abi) as InvoiceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InvoiceManager {
    return new Contract(address, _abi, signerOrProvider) as InvoiceManager;
  }
}
